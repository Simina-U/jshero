jshero.koans.add({id:"bool",title:"Wahrheitswerte",lesson:"Der dritte wichtige Datentyp neben Strings und Zahlen sind Wahrheitswerte. Sie werden auch boolesche Werte\ngenannt. Boolesche Werte kennen nur zwei Zust\xE4nde: <code>true</code> und <code>false</code>. Mit booleschen Werten kann\nman \xE4hnlich \"rechnen\" wie mit Zahlen. JavaScript kennt drei boolesche Operatoren: '<code>&&</code> (und),\n<code>||</code> (oder) und <code>!</code> (nicht). Das Ergebnis dieser Operationen ist wieder ein boolescher Wert.\n<code>&&</code> verkn\xFCpft zwei boolesche Werte. Sind beide Werte <code>true</code>, ist das Ergebnis auch\n<code>true</code>. In allen anderen F\xE4llen ist es <code>false</code>. Bei <code>||</code> ist das Ergebnis\n<code>false</code>, wenn beide Eingangswerte auch <code>false</code> sind. In  allen anderen F\xE4llen ist das Ergebnis\n<code>true</code>. <code>!</code> wird nur auf einen booleschen Wert angewendet und invertiert diesen Wert: aus\n<code>true</code> wird <code>false</code> und aus <code>false</code> wird <code>true</code>.\n\n<pre><code>let x1 = true && false;\nlet x2 = !x1;\nlet x3 = x1 || x2;</code></pre>\n\n<code>x1</code> ist <code>false</code>,  <code>x2</code> ist <code>true</code> und <code>x3</code> ist ebenfalls\n<code>true</code>.",task:"Schreibe eine Funktion <code>nand</code>, die zwei boolesche Werte als Parameter entgegennimmt. Die R\xFCckgabe\nder Funktion soll <code>false</code> sein, wenn beide Paramter <code>true</code> sind. In den anderen F\xE4llen soll die\nR\xFCckgabe <code>true</code> sein.<br><br>D.h.: <code>nand(true, true)</code> soll <code>false</code> liefern,\n<code>nand(true, false)</code>, <code>nand(false, true)</code> und <code>nand(false, false)</code> sollen\n<code>true</code> zur\xFCckgeben.",hint:"<pre><code>let nand = function(a, b) {\n  let and = a && b;\n  ...\n};</code></pre>",solution:"<pre><code>let nand = function(a, b) {\n  let and = a && b;\n  return !and;\n};</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("nand")},function(){return jshero.testutil.assert_functionHasNumOfParameter("nand",2)},function(){return jshero.testutil.assert_functionReturns("nand(true, true)",false)},function(){return jshero.testutil.assert_functionReturns("nand(true, false)",true)},function(){return jshero.testutil.assert_functionReturns("nand(false, true)",true)},function(){return jshero.testutil.assert_functionReturns("nand(false, false)",true)}]});