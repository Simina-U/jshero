(function(testutil){jshero.koans.add({id:"arraypush",title:"Array: shift() und push()",lesson:"Arrays besitzen eine Reihe von Methoden. Zwei dieser Methoden sind <code>shift</code> und <code>push</code>.\nZur Erinnerung: Methoden sind Funktionen, die auf einem Objekt, hier einem Array, ausgef\xFChrt werden. Methoden werden mit einem Punkt\nan das Objekt angeh\xE4ngt. Wie bei Funktionen \xFCblich folgt dem Methodennamen die runden Klammern, ggf. gef\xFCllt mit Parametern.\n<code>shift</code> hat keine Parameter und verschiebt die Elemente eines Arrays nach links.\nDas 1te Element wird zum 0ten, das 2te zum 1ten, das 3te zum 2ten, usw.\nDas 0te Element wird aus dem Array entfernt und zur\xFCckgegeben. Nach dem <code>shift</code> hat das Array ein Element weniger.\n\n<pre><code>var sprachen = ['C', 'Java', 'JavaScript'];\nvar naechsteSprache = sprachen.shift();</code></pre>\n\nDas Array <code>sprachen</code> wird mit 3 Programmiersprachen angelegt.\nNach dem <code>shift</code> enth\xE4lt <code>sprachen</code> nur noch 2 Elemente,\nn\xE4mlich <code>['Java', 'JavaScript']</code>. Der Wert <code>'C'</code> ist in der Variablen\n<code>naechsteSprache</code> gelandet.<br>\nMit der h\xE4ufig verwendeten Methode <code>push</code> f\xFCgt man dem Array ein neues Element hinzu.\nDas neue Element wird als Parameter \xFCbergeben und an das Ende des Arrays geh\xE4ngt.\n\n<pre><code>var sprachen = [];\nsprachen.push('C');\nsprachen.push('Java');\nsprachen.push('JavaScript');</code></pre>\n\nHier wird ein leeres Array nacheinander mit den aufgef\xFChrten Werten gef\xFCllt. Am Ende erhalten wir das Array\n<code>['C', 'Java', 'JavaScript']</code>. Wir hatten gesehen, dass man ein Array auch per Index f\xFCllen kann.\n<code>sprachen[sprachen.length] = 'PHP'</code> ist dasselbe wie <code>sprachen.push('PHP')</code>. Doch schon\nan der L\xE4nge des Codes sieht man, dass die Variante mit <code>push</code> eleganter ist.",task:"Schreibe eine Funktion <code>rotiere</code>, die die Elemente eines Arrays rotiert.\nAlle Elemente des Arrays sollen um eine Position nach links verschoben werden.\nDas 0te Element soll ans Ende des Arrays gestellt werden. Das rotierte Array soll zur\xFCckgegeben werden.\n<code>rotiere(['a', 'b', 'c'])</code> sollte <code>['b', 'c', 'a']</code> ergeben.",hint:"<pre><code>Entferne mit shift das 0te Element.\nF\xFCge mit push das 0te Element wieder hinzu.\n</code></pre>",solution:"<pre><code>var rotiere = function(einArray) {\n  var element0 = einArray.shift();\n  einArray.push(element0);\n  return einArray;\n};</code></pre>",tests:[function(){return testutil.assert_isFunction("rotiere")},function(){return testutil.assert_functionHasNumOfParameter("rotiere",1)},function(){return testutil.assert_functionReturns("rotiere([1, 2])",[2,1])},function(){return testutil.assert_functionReturns("rotiere(['a', 'b', 'c'])",["b","c","a"])},function(){return testutil.assert_functionReturns("rotiere([1, 'b', 'c', 37])",["b","c",37,1])}]})})(jshero.testutil);