jshero.koans.add({id:"if",title:"if",lesson:"H\xE4ufig soll Code nur dann ausgef\xFChrt werden, wenn eine bestimmte Bedingung erf\xFCllt ist.\nDazu verwendet man die <code>if</code>-Anweisung.\n\n<pre><code>let gewinn = 0;\nif (wuerfelzahl === 6) {\n  gewinn = 100;\n}</code></pre>\n\nDiese Anweisung besteht aus dem Schl\xFCsselwort <code>if</code> (engl: wenn) gefolgt von runden Klammern. In den runden\nKlammern steht ein Ausdruck - die Bedingung -, der zu <code>true</code> oder <code>false</code> ausgewertet wird.\nErgibt die Bedingung <code>true</code>, werden alle Anweisungen in dem durch die geschweiften Klammern begrenzten Block\nausgef\xFChrt. Ergibt die Bedingung <code>false</code>, wird der durch die geschweiften Klammern begrenzte Block \xFCbersprungen.\nHat in unserem Beispiel die Variable <code>wuerfelzahl</code> den Wert <code>6</code>, so wird <code>gewinn</code> auf\n<code>100</code> gesetzt. Hat <code>wuerfelzahl</code> nicht den Wert <code>6</code>, bleibt <code>gewinn</code> bei\n<code>0</code>.",task:"Schreibe eine Funktion <code>gleich</code>, die 2 Werte auf strikte Gleichheit \xFCberpr\xFCft. Sind die beiden Werte\ngleich, so soll der String <code>'GLEICH'</code> zur\xFCckgegeben werden. Sind sie ungleich, so soll man\n<code>'UNGLEICH'</code> erhalten.",hint:"<pre><code>let gleich = function(a, b) {\n// Initialisiere eine Variable\n// mit 'UNGLEICH'. Verwende 'if',\n// um die Variable ggf. auf\n// 'GLEICH' zu setzen. Gebe die\n// Variable zur\xFCck.\n};</code></pre>",solution:"<pre><code>let gleich = function(a, b) {\n  let ergebnis = 'UNGLEICH';\n  if (a === b) {\n    ergebnis = 'GLEICH';\n  }\n  return ergebnis;\n};</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("gleich")},function(){return jshero.testutil.assert_functionHasNumOfParameter("gleich",2)},function(){return jshero.testutil.assert_functionReturns("gleich(1, 1)","GLEICH")},function(){return jshero.testutil.assert_functionReturns("gleich(1, 2)","UNGLEICH")},function(){return jshero.testutil.assert_functionReturns("gleich(1, '1')","UNGLEICH")},function(){return jshero.testutil.assert_functionReturns("gleich('klein', 'klein')","GLEICH")},function(){return jshero.testutil.assert_functionReturns("gleich('Links', 'Rechts')","UNGLEICH")}]});