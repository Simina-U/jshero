jshero.koans.add({id:"regex2",title:"Regex: Beliebiges Zeichen",lesson:"Neben einfachen Zeichenliteralen kennen regul\xE4re Ausdr\xFCcke eine\nReihe von Zeichen mit besonderer Bedeutung, sogenannte Metazeichen.\nEin solches Metazeichen ist der Punkt. Er steht f\xFCr genau ein beliebiges Zeichen ausgenommen den Zeilenumbruch: \n\n<pre><code>var t1 = /M.ier/.test('Maier');\nvar t2 = /M.ier/.test('Meierei');\nvar t3 = /M.ier/.test('Baier');\nvar t4 = /M.ier/.test('Mier');\nvar t5 = /M.ier/.test('M-ier');</code></pre>\n\nDer regul\xE4rer Ausdruck <code>/M.ier/</code> steht f\xFCr alle Zeichenketten, die mit\n<code>M</code> beginnen, ein beliebiges zweites Zeichen besitzen und anschlie\xDFend mit\n<code>ier</code> enden. Damit k\xF6nnen wir testen, ob ein String <code>Maier</code> oder\n<code>Meier</code> enth\xE4lt. Das ist in den ersten beiden Beispielzeilen der Fall.\n<code>t1</code> und <code>t2</code> sind <code>true</code>. Der String <code>'Baier'</code> enth\xE4lt\nkein Pattern, dass mit <code>M</code> beginnt. <code>t3</code> ist <code>false</code>.\nAuch <code>t4</code> ist <code>false</code>, da zwischen <code>M</code> und <code>ier</code>\ngenau ein Zeichen liegen muss. Das ist hier nicht der Fall. Da der Punkt f\xFCr jedes beliebige Zeichen\nsteht, trifft <code>'M-ier'</code> auch auf unser Pattern zu. <code>t5</code> ist <code>true</code>.\n<br><br>\nDer Punkt kann auch mehrmals in einem Pattern verwendet werden.\n<code>/H..s/</code> steht f\xFCr alle Zeichenketten, die mit <code>H</code> beginnen, anschlie\xDFend\nzwei beliebige Zeichen besitzen und mit <code>s</code> enden. <code>Hans</code> und <code>Haus</code>\ntreffen auf dieses Pattern zu, <code>His</code> und <code>Heros</code> nicht.",task:"Schreibe eine Funktion <code>pruefe</code>, die feststellt, ob ein String zwei in\ndoppelte Anf\xFChrungszeichen eingeschlossene Zeichen besitzt.  \n<code>pruefe('\"Wo\"')</code> sollte <code>true</code> und\n<code>pruefe('\"Was\"')</code> sollte <code>false</code> ergeben.",tests:[function(){return jshero.testutil.assert_isFunction("pruefe")},function(){return jshero.testutil.assert_functionHasNumOfParameter("pruefe",1)},function(){return jshero.testutil.assert_functionReturns("pruefe('\"Ja\"')",true)},function(){return jshero.testutil.assert_functionReturns("pruefe('-\"Oh\"-')",true)},function(){return jshero.testutil.assert_functionReturns("pruefe('\"A\"')",false)},function(){return jshero.testutil.assert_functionReturns("pruefe('\"Was\"')",false)}]});