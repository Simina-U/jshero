jshero.koans.add({id:"regexor",title:"Regex: Alternativen",lesson:"M\xF6chte man nach Alternativen suchen, kann man daf\xFCr den <code>|</code> Operator verwenden.\n<code>/Tom|Jerry/</code> sucht nach <code>Tom</code> oder <code>Jerry</code>. Der <code>|</code> Operator\ngilt f\xFCr den kompletten Regex. <code>/\\bTom|Jerry\\b/</code> sucht nach W\xF6rtern, die mit <code>Tom</code>\nbeginnen oder mit <code>Jerry</code> enden. <code>Tomme</code> wird so auch gefunden.\nM\xF6chte man, dass beide Wortgrenzen f\xFCr beide Namen gelten, kann man Klammern verwenden.\n<code>/\\b(Tom|Jerry)\\b/</code> sucht nach den W\xF6rtern <code>Tom</code> oder <code>Jerry</code>. Der \n<code>|</code> Operator gilt jetzt nur f\xFCr die Klammer. <code>Tomme</code> wird nicht mehr gefunden.",task:"Schreibe eine Funktion <code>isTime</code>, die feststellt, ob ein String eine Zeitangabe der Form\n<code>hh:mm</code> ist. F\xFCr <code>hh</code> sind alle Werte von <code>00</code> bis <code>23</code> und f\xFCr\n<code>mm</code> alle Werte von <code>00</code> bis <code>59</code> zugelassen.\n<code>isTime('23:27')</code> sollte <code>true</code> und <code>isTime('24:12')</code> sollte\n<code>false</code> ergeben.",tests:[function(){return jshero.testutil.assert_isFunction("isTime")},function(){return jshero.testutil.assert_functionHasNumOfParameter("isTime",1)},function(){return jshero.testutil.assert_functionReturns("isTime('00:00')",true)},function(){return jshero.testutil.assert_functionReturns("isTime('01:01')",true)},function(){return jshero.testutil.assert_functionReturns("isTime('09:19')",true)},function(){return jshero.testutil.assert_functionReturns("isTime('12:27')",true)},function(){return jshero.testutil.assert_functionReturns("isTime('18:47')",true)},function(){return jshero.testutil.assert_functionReturns("isTime('23:59')",true)},function(){return jshero.testutil.assert_functionReturns("isTime('24:00')",false)},function(){return jshero.testutil.assert_functionReturns("isTime('02:60')",false)},function(){return jshero.testutil.assert_functionReturns("isTime('-00:00')",false)},function(){return jshero.testutil.assert_functionReturns("isTime('00:00-')",false)},function(){return jshero.testutil.assert_functionReturns("isTime('1:00')",false)},function(){return jshero.testutil.assert_functionReturns("isTime('00:0')",false)},function(){return jshero.testutil.assert_functionReturns("isTime('00-00')",false)}]});