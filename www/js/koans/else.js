jshero.koans.add({id:"else",title:"if...else",lesson:"Soll ein Codeblock nur dann ausgef\xFChrt werden, wenn eine <code>if</code>-Bedingung\nnicht erf\xFCllt ist, verwendet man zus\xE4tzlich zum <code>if</code> ein <code>else</code> (engl.: sonst).\n\n<pre><code>let mitteilung;\nif (betrag > 1000) {\n  mitteilung = 'Keine Auszahlung m\xF6glich!';\n} else {\n  mitteilung = 'Der Betrag wird ausgezahlt!';\n}</code></pre>\n\nJe nachdem, ob <code>betrag</code> gr\xF6\xDFer oder kleiner <code>1000</code> ist, wird entweder der\n<code>if</code>-Zweig oder der <code>else</code>-Zweig ausgef\xFChrt.",task:"Schreibe eine Funktion <code>addiereMitZuschlag</code>, die zwei Betr\xE4ge mit Zuschlag addiert.\nF\xFCr jeden Betrag, der kleiner gleich <code>10</code> ist, betr\xE4gt der Zuschlag <code>1</code>.\nF\xFCr jeden Betrag, der gr\xF6\xDFer <code>10</code> ist, betr\xE4gt der Zuschlag <code>2</code>.<br><br>Beispiel:\nDer Aufruf <code>addiereMitZuschlag(5, 15)</code> sollte <code>23</code> ergeben.",hint:"<pre><code>let addiereMitZuschlag = function(a, b) {\n\n  let zuschlag = 0;\n\n  if (a <= 10) {\n    zuschlag = zuschlag + 1;\n  } else ...\n\n  ...\n\n  return a + b + zuschlag;\n};</code></pre>",solution:"<pre><code>let addiereMitZuschlag = function(a, b) {\n\n  let zuschlag = 0;\n\n  if (a <= 10) {\n    zuschlag = zuschlag + 1;\n  } else {\n    zuschlag = zuschlag + 2;\n  }\n\n  if (b <= 10) {\n    zuschlag = zuschlag + 1;\n  } else {\n    zuschlag = zuschlag + 2;\n  }\n\n  return a + b + zuschlag;\n};</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("addiereMitZuschlag")},function(){return jshero.testutil.assert_functionHasNumOfParameter("addiereMitZuschlag",2)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(1, 1)",4)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(10, 10)",22)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(11, 10)",24)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(10, 11)",24)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(11, 11)",26)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(15, 27)",46)},function(){return jshero.testutil.assert_functionReturns("addiereMitZuschlag(5, 25)",33)}]});