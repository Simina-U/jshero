jshero.koans.add({id:"stringupper",title:"String: toUpperCase()",lesson:"Neben der Eigenschaft <code>length</code> besitzen Strings noch eine Reihe von Methoden.\nDas sind Funktionen, die direkt auf dem String angewendet werden. Wie die Eigenschaft <code>length</code>\nwerden diese Methoden mit einem Punkt direkt dem String oder einer Variablen, die einen String enth\xE4lt, angeh\xE4ngt.\nDa Methoden Funktionen sind, folgen in runden Klammern eingeschlossen die Argumente.\nZwei dieser String-Methoden sind die parameterlosen Methoden <code>toUpperCase</code> und <code>toLowerCase</code>.\nSie geben den String, auf dem sie angewendet werden, in Gro\xDF- bzw. Kleinbuchstaben zur\xFCck. Wichtig ist,\ndass der eigentliche String unver\xE4ndert bleibt. Die R\xFCckgabe dieser Methoden ist der in Gro\xDF- bzw. Kleinbuchstaben\numgewandelte String.\n<pre><code>var stadt = 'Prag';\nvar ausgabe = stadt.toUpperCase();</code/></pre>\n<code>ausgabe</code> erh\xE4lt den Wert <code>'PRAG'</code>. <code>stadt</code> hat weiterhin den Wert <code>'Prag'</code>.\n<pre><code>ausgabe = stadt.toLowerCase();</code/></pre>\nJetzt hat <code>ausgabe</code> den Wert <code>'prag'</code>.\n<pre><code>ausgabe = 'Flug 714'.toUpperCase();</code/></pre>\nHier wird <code>toUpperCase()</code> direkt auf einen String angewendet. Der Wert von <code>ausgabe</code> ist\n<code>'FLUG 714'</code>. Zahlen und auch Sonderzeichen werden nicht ver\xE4ndert.",task:"Schreibe eine Funktion <code>toCase</code>, die bei \xDCbergabe eines Strings diesen aneinandergeh\xE4ngt\nin Klein- und in Gro\xDFschreibung zur\xFCckgibt. Das Trennzeichen zwischen der Klein- und Gro\xDFschreibung soll\n<code>-</code> sein.<br><br>Beispiel: <code>toCase('Ida')</code> sollte <code>'ida-IDA'</code> zur\xFCckgeben.",hint:"<pre><code>var toCase = function(text) {\n  return ... + '-' + ...;\n};</code/></pre>",solution:"<pre><code>var toCase = function(text) {\n  return text.toLowerCase() + '-' + text.toUpperCase();\n};</code/></pre>",tests:[function(){return jshero.testutil.assert_isFunction("toCase")},function(){return jshero.testutil.assert_functionHasNumOfParameter("toCase",1)},function(){return jshero.testutil.assert_functionReturns("toCase('Ida')","ida-IDA")},function(){return jshero.testutil.assert_functionReturns("toCase('Paris')","paris-PARIS")}]});