jshero.koans.add({id:"join",title:"Array: join()",lesson:"Mit <code>join</code> verbindet man alle Elemente eines Arrays zu einem String:\n\n<pre><code>let words = ['Sex', 'Drugs', 'Rock', 'Roll'];\nlet l1 = words.join();\nlet l2 = words.join(' & ');\nlet l3 = words.join(' and ');</code></pre>\n\nOhne Argument f\xFCgt <code>join</code> die Elemente kommasepariert zusammen.\n<code>l1</code> ergibt <code>'Sex,Drugs,Rock,Roll'</code>.\nAnsonsten gibt das \xFCbergebene Argument das Trennzeichen vor.\n<code>l2</code> ergibt <code>'Sex & Drugs & Rock & Roll'</code> und\n<code>l3</code> den String <code>'Sex and Drugs and Rock and Roll'</code>.",task:"Schreibe eine Funktion <code>list</code>, die W\xF6rter in einem Array zu einer Aufz\xE4hlung zusammenf\xFChrt.\nEin leeres Array soll den Leerstring ergeben.\n<br><br>Beispiel: <code>list(['Sonne', 'Mond', 'Sterne'])</code> soll <code>'Sonne, Mond und Sterne'</code> ergeben.",hint:"Erzeuge aus dem \xFCbergebenen Array ein neues Array ohne das letzte Element.\nVerkette die Elemente des neuen Arrays mit Komma und Leerzeichen.\nF\xFCge das letztes Element des \xFCbergebene Array mit <code>' und '</code> hinzu.\nBehandle Sonderf\xE4lle getrennt.",solution:"<pre><code>function list(words) {\n\n  if (words.length === 0) {\n    return '';\n  }\n\n  if (words.length === 1) {\n    return words[0];\n  }\n\n  let wordsExLast = words.slice(0, words.length - 1);\n  let lastWord = words[words.length - 1];\n  return wordsExLast.join(', ') + ' und ' + lastWord;\n}</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("list")},function(){return jshero.testutil.assert_functionHasNumOfParameter("list",1)},function(){return jshero.testutil.assert_functionReturns("list(['Ernie', 'Bert'])","Ernie und Bert")},function(){return jshero.testutil.assert_functionReturns("list(['Sonne', 'Mond', 'Sterne'])","Sonne, Mond und Sterne")},function(){return jshero.testutil.assert_functionReturns("list(['C', 'C++', 'Python', 'PHP'])","C, C++, Python und PHP")},function(){return jshero.testutil.assert_functionReturns("list(['Apfel'])","Apfel")},function(){return jshero.testutil.assert_functionReturns("list([])","")}]});