jshero.koans.add({id:"while",title:"while-Schleife",lesson:"Die <code>while</code>-Schleife besitzt nur eine Schleifen-Bedingung.\nDer Schleifen-Code wird ausgef\xFChrt, solange die Bedingung <code>true</code> ergibt.\nErgibt die Bedingung <code>false</code>, wird die Schleife beendet und die Codeausf\xFChrung\nwird nach der Schleife fortgesetzt.\n\n<pre><code>let dreiX = '';\nwhile (dreiX.length < 3) {\n  dreiX = dreiX + 'x';\n}</code></pre>\n\nSolange <code>dreiX</code> weniger als 3 Zeichen besitzt, wird es um <code>'x'</code> erg\xE4nzt.\nHat <code>dreiX</code> die L\xE4nge 3, wird die Schleife beendet.\n<code>dreiX</code> hat dann den Wert <code>'xxx'</code>.",task:"Schreibe eine Funktion <code>abstand</code>, die eine nat\xFCrliche Zahl n als Parameter\nentgegennimmt und die einen String bestehend aus n Leerzeichen zur\xFCckgibt.\n<code>abstand(1)</code> sollte <code>' '</code> ergeben.",tests:[function(){return jshero.testutil.assert_isFunction("abstand")},function(){return jshero.testutil.assert_functionHasNumOfParameter("abstand",1)},function(){return jshero.testutil.assert_functionReturns("abstand(0)","")},function(){return jshero.testutil.assert_functionReturns("abstand(1)"," ")},function(){return jshero.testutil.assert_functionReturns("abstand(2)","  ")},function(){return jshero.testutil.assert_functionReturns("abstand(3)","   ")}]});