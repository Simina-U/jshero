jshero.koans.add({id:"for2",title:"Schleifen und Arrays",lesson:"<code>for</code>-Schleifen eignen sich besonders gut zum Durchlaufen von Arrays.\nIm folgenden Beispiel werden die Elemente eines Arrays aufaddiert:\n\n<pre><code>let sum = 0;\nfor (let i = 0; i < myArray.length; i++) {\n  sum = sum + myArray[i];\n}</code></pre>",task:"Schreibe eine Funktion <code>mean</code>, die ein Array gef\xFCllt mit Zahlen entgegennimmt und den\nDurchschnitt dieser Zahlen zur\xFCckgibt.<br><br>\nBeispiel: <code>mean([1, 2, 3])</code> sollte <code>(1+2+3)/3</code> = <code>2</code> ergeben.",hint:"Um den Durchschnitt von n Zahlen zu berechnen, mu\xDFt du die Zahlen aufaddieren und die erhaltene Summe durch n teilen.",solution:"<pre><code>function mean(data) {\n\n  let sum = 0;\n  for (let i = 0; i < data.length; i ++) {\n    sum = sum + data[i];\n  }\n\n  return sum / data.length;\n};</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("mean")},function(){return jshero.testutil.assert_functionHasNumOfParameter("mean",1)},function(){return jshero.testutil.assert_functionReturns("mean([0])",0)},function(){return jshero.testutil.assert_functionReturns("mean([1, 2])",1.5)},function(){return jshero.testutil.assert_functionReturns("mean([1, 2, 3])",2)},function(){return jshero.testutil.assert_functionReturns("mean([-2, -4, 17, 34])",11.25)}]});