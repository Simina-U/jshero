jshero.koans.add({id:"numbertofixed",title:"Number: toFixed()",lesson:"Eine weitere Number-Methode ist <code>toFixed</code>. Sie gibt die Zahl als String mit festen Nachkommastellen zur\xFCck.\n\n<code><pre>let n = 7.25\nlet zeroDigits = n.toFixed(0);\nlet oneDigit = n.toFixed(1);\nlet twoDigits = n.toFixed(2);\nlet threeDigits = n.toFixed(3);</code></pre>\n\n<code>zeroDigits</code> hat den Wert <code>'7'</code>. Es hat keine Nachkommastellen. <code>oneDigit</code> hat den Wert\n<code>'7.3'</code>. Es wird wie bei <code>Math.round()</code> kaufm\xE4nisch gerundet. <code>twoDigits</code> hat den Wert\n<code>'7.25'</code>. Und <code>threeDigits</code> hat den Wert <code>'7.250'</code>. Hier werden fehlende Nachkommastellen\nmit 0 aufgef\xFCllt.",task:"Schreibe eine Funktion <code>toEuro</code>, die eine Zahl als Euro-Betrag ausgibt. Der Betrag soll zwei\nNachkommastellen und ein angeh\xE4ngtes Euro-Zeichen besitzen. Dezimalpunkt soll das Komma sein.<br><br>\nBeispiel: <code>toEuro(1)</code> soll '1,00 \u20AC' ergeben.",tests:[function(){return jshero.testutil.assert_isFunction("toEuro")},function(){return jshero.testutil.assert_functionHasNumOfParameter("toEuro",1)},function(){return jshero.testutil.assert_functionReturns("toEuro(0)","0,00 \u20AC")},function(){return jshero.testutil.assert_functionReturns("toEuro(1)","1,00 \u20AC")},function(){return jshero.testutil.assert_functionReturns("toEuro(1.2555)","1,26 \u20AC")},function(){return jshero.testutil.assert_functionReturns("toEuro(123.4)","123,40 \u20AC")}]});