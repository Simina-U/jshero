jshero.koans.add({id:"concat",title:"Array: concat()",lesson:"Mit der <code>concat</code> Methode kann man zwei Arrays aneinanderh\xE4ngen:\n\n<pre><code>let a1 = [1, 2, 3];\nlet a2 = [4, 5, 6];\nlet a3 = a1.concat(a2);</code></pre>\n\n<code>a3</code> enth\xE4lt das Array <code>[1, 2, 3, 4, 5, 6]</code>.\nWichtig ist, dass die beiden urspr\xFCnglichen Arrays <code>a1</code> und <code>a2</code> nicht ver\xE4ndert werden.",task:"Schreibe eine Funktion <code>concatUp</code>, die zwei Arrays zu einem zusammenf\xFChrt.\nDabei soll das l\xE4ngere Array an das k\xFCrzere Array angeh\xE4ngt werden. Sind beide Arrays gleich lang,\nso soll das zweite Array dem ersten Array angeh\xE4ngt werden.<br><br>Beispiel: <code>concatUp([5, 7], [6])</code> sollte\n<code>[6, 5, 7]</code> und <code>concatUp([5, 7], [6, 8])</code> sollte <code>[5, 7, 6, 8]</code> ergeben.",hint:"<pre><code>function concatUp(firstArray, secondArray) {\n  // Benutze if, um zu entscheiden,\n  // in welcher Reihenfolge die beiden\n  // Arrays aneinander geh\xE4ngt werden.\n}</code></pre>",solution:"<pre><code>function concatUp(firstArray, secondArray) {\n\n  if (secondArray.length >= firstArray.length) {\n    return firstArray.concat(secondArray);\n  }\n\n  return secondArray.concat(firstArray);\n}</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("concatUp")},function(){return jshero.testutil.assert_functionHasNumOfParameter("concatUp",2)},function(){return jshero.testutil.assert_functionReturns("concatUp([5, 7], [6])",[6,5,7])},function(){return jshero.testutil.assert_functionReturns("concatUp(['x'], ['a', 'b'])",["x","a","b"])},function(){return jshero.testutil.assert_functionReturns("concatUp([5, 7], [6, 8])",[5,7,6,8])}]});