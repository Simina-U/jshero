(function(testutil){jshero.koans.add({id:"object1",title:"Objekte",lesson:"Um komplexere Sachverhalte abzubilden, verwendet man Objekte. Eine Person hat einen Namen und ein Alter.\nDiese beiden Daten k\xF6nnte man in zwei Variablen speichern. Besser ist es, daf\xFCr ein Objekt zu benutzen.\nObjekte in JavaScript sind eine Sammlung von Eigenschaften. Jede Eigenschaft besteht aus einem Namen und ihrem Wert.\nObjekte werden am einfachsten mit der Mengenklammer erzeugt:\n\n<pre><code>let person = {\n  name: 'Toni Morrison',\n  alter: 88\n};</code></pre>\n\nHier haben wir ein Objekt mit den beiden Eigenschaften <code>name</code> und <code>alter</code> erzeugt.\nDas Objekt wurde der Variablen <code>person</code> zugewiesen.\nAuf dem Namen einer Eigenschaft folgt ein Doppelpunkt und anschlie\xDFend ihr Wert.\nDie Eigenschaft <code>name</code> hat den Wert <code>'Toni Morrison'</code> und die Eigenschaft <code>alter</code>\nden Wert <code>52</code>. Jede Eigenschaft wird mit einem Komma beendet. Bei der letzten Eigenschaft wird das\nKomma weglassen. Man kann alle Eigenschaften zusammen mit ihren Werten in einer Zeile notieren.\n\xDCbersichtlicher ist es, wenn man wie hier f\xFCr jede Eigenschaft eine neue Zeile verwendet.<br><br>\nMit der folgenden Aufgabe wollen wir einen Punkt in einer Ebene modellieren.\nDieser Punkt k\xF6nnte zum Beispiel die Position einer Figur in einem 2-dimensionalen Computerspiel sein.",task:"Erzeuge ein Objekt mit den beiden Eigenschaften <code>x</code> und <code>y</code>.\n<code>x</code> soll den Wert <code>1</code> und <code>y</code> den Wert <code>2</code> erhalten.\nWeise das Objekt der Variablen <code>point</code> zu.",hint:"<pre><code>let point = {\n  ...\n};</code></pre>",solution:"<pre><code>let point = {\n  x: 1,\n  y: 2\n};</code></pre>",tests:[function(){return testutil.assert_variableDefined("point")},function(){return testutil.assert_variableIsObject("point",{x:1,y:2})}]})})(jshero.testutil);