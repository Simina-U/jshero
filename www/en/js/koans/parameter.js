jshero.koans.add({id:"parameter",title:"Parameters",lesson:"Now we get to know functions with parameters. With\n<pre><code>let give = function(input) {\n  return input;<br>};</code></pre>\nwe define a function that simply returns the parameter <code>input</code>.\nParameters are variables. With\n<pre><code>let result = give('apple');</code></pre>\nwe call the function and pass it the argument <code>'apple'</code>. The function will be executed.\nThe argument <code>'apple'</code> will be assigned to the parameter <code>input</code>.\n<code>input</code> gets the value <code>'apple'</code>.\nThe variable <code>input</code> is returned in the single code line of the function.\nThis return is assigned to the variable <code>result</code>. Finally, <code>result</code> has the value <code>'apple'</code>.",task:"Write a function <code>echo</code> that also returns the passed parameter.\n<code>echo('Greta')</code> should return <code>'Greta'</code> and <code>echo('CO2')</code> should return <code>'CO2'</code>",hint:"<pre><code>let echo = function(sound) {\n  ...\n};</code></pre>",solution:"<pre><code>let echo = function(sound) {\n  return sound;\n};</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("echo")},function(){return jshero.testutil.assert_functionHasNumOfParameter("echo",1)},function(){return jshero.testutil.assert_functionReturns("echo('Greta')","Greta")},function(){return jshero.testutil.assert_functionReturns("echo('CO2')","CO2")}]});