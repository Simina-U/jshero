jshero.koans.add({id:"concat",title:"Array: concat()",lesson:"Using the <code>concat</code> method you can concatenate two arrays:\n\n<pre><code>let a1 = [1, 2, 3];\nlet a2 = [4, 5, 6];\nlet a3 = a1.concat(a2);</code></pre>\n\n<code>a3</code> contains the array <code>[1, 2, 3, 4, 5, 6]</code>.\nThe two existing arrays <code>a1</code> and <code>a2</code> will not be changed.",task:"Write a function <code>concatUp</code> that concatenate two arrays.\nThe longer array should be appended to the shorter array.\nIf both arrays are equally long, the second array should be appended to the first array.<br><br>\nExample: <code>concatUp([1,&nbsp;2],&nbsp;[3])</code> should return <code>[3,&nbsp;1,&nbsp;2]</code>\nand <code>concatUp([5,&nbsp;7],&nbsp;[6,&nbsp;8])</code> should return <code>[5,&nbsp;7,&nbsp;6,&nbsp;8]</code>.",hint:"<pre><code>function concatUp(firstArray, secondArray) {\n  // Use if to decide in which order the\n  // two arrays should be concatenated.\n}</code></pre>",solution:"<pre><code>function concatUp(firstArray, secondArray) {\n\n  if (secondArray.length >= firstArray.length) {\n    return firstArray.concat(secondArray);\n  }\n\n  return secondArray.concat(firstArray);\n}</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("concatUp")},function(){return jshero.testutil.assert_functionHasNumOfParameter("concatUp",2)},function(){return jshero.testutil.assert_functionReturns("concatUp([5, 7], [6])",[6,5,7])},function(){return jshero.testutil.assert_functionReturns("concatUp(['x'], ['a', 'b'])",["x","a","b"])},function(){return jshero.testutil.assert_functionReturns("concatUp([5, 7], [6, 8])",[5,7,6,8])}]});