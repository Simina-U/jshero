jshero.koans.add({id:"function",title:"Functions",lesson:"A function is a block of statements that can be executed as often as you like.\nA function can have parameters and can return a value. Functions can be defined in different ways.\nPerhaps the most common one is the function declaration. It starts with the keyword <code>function</code>.\nIt follows:\n<ul><li>the name of the function,</li>\n<li>the parameters enclosed in round parentheses,</li>\n<li>the statements enclosed in curly brackets.</li></ul>\nWith the keyword <code>return</code> a value can be returned. At the same time <code>return</code> terminates the function.\nStatements after a <code>return</code> will not be executed. With\n\n<pre><code>function color() {\n  return 'red';\n}</code></pre>\n\nwe define a function that returns the value <code>'red'</code>. The function has no parameters (the parentheses are empty)\nand contains only the return statement. The function is assigned to the variable <code>color</code>.\nThe function is called by its name:\n\n<pre><code>let result = color();</code></pre>\n\nNow the function is executed. Its return is assigned to the variable <code>result</code>. <code>result</code> therefore\nhas the value <code>'red'</code>.",task:"Define a function <code>hello</code> that returns <code>'Hello world!'</code>.",hint:"<pre><code>function hello() {\n  ...\n}</code></pre>",solution:"<pre><code>function hello() {\n  return 'Hello world!';\n}</code></pre>",tests:[function(){return jshero.testutil.assert_isFunction("hello")},function(){return jshero.testutil.assert_functionReturns("hello()","Hello world!")}]});